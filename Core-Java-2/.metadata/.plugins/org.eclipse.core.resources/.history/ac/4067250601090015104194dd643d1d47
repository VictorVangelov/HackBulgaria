package WebCrawer;

import java.net.URL;
import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.Executors;

import org.apache.commons.io.IOUtils;

import com.google.common.util.concurrent.ListenableFuture;
import com.google.common.util.concurrent.ListeningExecutorService;
import com.google.common.util.concurrent.MoreExecutors;

public class futureListnerRequestMaker {
	@SuppressWarnings("deprecation")
	public static void main(String[] args) {
		ListeningExecutorService pool = MoreExecutors.listeningDecorator(Executors.newCachedThreadPool());
		ArrayList<String> asd = new ArrayList<String>(Arrays.asList("https://hackbulgaria.com/","https://hackbulgaria.com/partners/"));
		for (final String siteUrl : asd) {
		    final ListenableFuture<String> future = pool.submit(new Callable<String>() {
		        public String call() throws Exception {
		            return IOUtils.toString(new URL(siteUrl), StandardCharsets.UTF_8);
		        }
		    });

		    future.addListener(new Runnable() {
		        @Override
		        public void run() {
		            try {
		                final String contents = future.get();
		                System.out.println("\n\n\n\n\n\n\n");
		                System.out.println(contents);
		            } catch (InterruptedException e) {
		                System.out.println("Naaa, they Stoped me");
		            } catch (ExecutionException e) {
		            	System.out.println("oops execution ex");
		               // log.error("Exception in task", e.getCause());
		            }
		        }
		    }, MoreExecutors.sameThreadExecutor());
		}
	}
}
